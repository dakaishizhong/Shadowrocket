# Shadowrocket配置文件

[General]
bypass-system = true
skip-proxy = 192.168.0.0/16,10.0.0.0/8,172.16.0.0/12,localhost,*.local
tun-excluded-routes = 10.0.0.0/8, 100.64.0.0/10, 127.0.0.0/8, 169.254.0.0/16, 172.16.0.0/12, 192.0.0.0/24, 192.0.2.0/24, 192.88.99.0/24, 192.168.0.0/16, 198.51.100.0/24, 203.0.113.0/24, 224.0.0.0/4, 255.255.255.255/32, 239.255.255.250/32
dns-server = 119.29.29.29,223.5.5.5,114.114.114.114,system
fallback-dns-server = system
ipv6 = false
prefer-ipv6 = false
dns-fallback-system = false
dns-direct-system = false
icmp-auto-reply = true
always-reject-url-rewrite = false
private-ip-answer = false

[Proxy Group]
# 该配置策略组可实现特定规则走指定策略或节点；如想让netflix走新加坡节点 那么可以在相应代理分组里勾选新加坡节点；
# 更改代理分组策略的步骤(以🎥 Netflix策略为例)：点击界面底部配置--点击配置文件"ⓘ"符号---代理分组---点击🎥 Netflix策略的"ⓘ"符号---勾选🇸🇬 新加坡节点--保存。(新版小火箭只需首页下拉即可调出代理分组界面）

# ♻️ ALL策略表示对所有节点进行测速并选择延迟最低的节点；测速间隔600秒，容差100ms；
# 若不想用某些特定节点 可以通过正则排除 例：♻️ ALL = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=100,timeout=5,policy-regex-filter=^(?!.*?(国内|限速|试用)).*$
# 也可以让指定机场参与测速 比如你的订阅连接的备注名是 YBNET 就套用以下示例：（新版已支持订阅选择）
# 🚀 策略选择 = select,✈️ 机场选择,🇨🇳 台湾节点,🇬🇧 英国节点,🇯🇵 日本节点,🇭🇰 香港节点,🇸🇬 新加坡节点,🇺🇸 美国节点,🇰🇷 韩国节点,🇷🇺 俄罗斯节点,🇮🇳 印度,🇩🇪 德国,🇨🇦 加拿大,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204
# ✈️ 机场选择 = url-test,YBNET,interval=600,tolerance=0,timeout=3,select=0,url=http://www.gstatic.com/generate_204

🚀 ALL = select,url=http://www.gstatic.com/generate_204,interval=600,tolerance=50,timeout=5,policy-regex-filter=.*
🤖️ 人工智能 = select,♻️ 美国自动,♻️ 香港自动,♻️ 日本自动,🇺🇸 美国高级,🇭🇰 香港高级,🇯🇵 日本高级,🇸🇬 新加坡高级, select=0
🍿 TikTok = select,📄 低倍率,♻️ 美国自动,♻️ 香港自动,♻️ 日本自动,♻️ 新加坡自动,🇺🇸 美国高级,🇭🇰 香港高级,🇯🇵 日本高级,🇸🇬 新加坡高级, select=0
📲 Google = select,♻️ 美国自动,♻️ 香港自动,♻️ 日本自动,♻️ 新加坡自动,🇺🇸 美国高级,🇭🇰 香港高级,🇯🇵 日本高级,🇸🇬 新加坡高级, select=0
📲 Telegram = select,📄 低倍率,♻️ 美国自动,♻️ 香港自动,♻️ 日本自动,♻️ 新加坡自动, select=0
📹 YouTube = select,📄 低倍率,♻️ 美国自动,♻️ 香港自动,♻️ 日本自动,♻️ 新加坡自动,🇺🇸 美国高级,🇭🇰 香港高级,🇯🇵 日本高级,🇸🇬 新加坡高级,select=0
🎻 Spotify = select,🌐 全球直连,♻️ 美国自动,♻️ 香港自动,♻️ 日本自动,♻️ 新加坡自动, select=0
📄 Twitter = select,♻️ 美国自动,♻️ 香港自动,♻️ 日本自动,♻️ 新加坡自动, select=0
📖 Reddit = select,♻️ 美国自动,♻️ 香港自动,♻️ 日本自动,♻️ 新加坡自动,🇺🇸 美国高级,🇭🇰 香港高级,🇯🇵 日本高级,🇸🇬 新加坡高级, select=0
📽 哔哩哔哩 = select, 🌐 全球直连, ♻️ 香港自动,♻️ 日本自动,♻️ 新加坡自动, select=0
Ⓜ️ 微软服务 = select, 🌐 全球直连,♻️ 美国自动,♻️ 香港自动,♻️ 日本自动,♻️ 新加坡自动, select=0
🍎 苹果服务 = select, 🌐 全球直连,♻️ 美国自动,♻️ 香港自动,♻️ 日本自动,♻️ 新加坡自动, select=0 

# 以下国家地区节点筛选 请自行根据机场节点名称修改正则

♻️ 美国自动  = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=50,timeout=5,policy-regex-filter=(?=.*美国)^((?!(高级|实验性)).)*$
♻️ 香港自动  = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=50,timeout=5,policy-regex-filter=(?=.*香港)^((?!(高级|实验性)).)*$
♻️ 日本自动  = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=50,timeout=5,policy-regex-filter=(?=.*日本)^((?!(高级|实验性)).)*$
♻️ 新加坡自动 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=50,timeout=5,policy-regex-filter=(?=.*新加坡)^((?!(高级|实验性)).)*$
📄 低倍率 = select,url=http://www.gstatic.com/generate_204,interval=600,tolerance=50,timeout=5,policy-regex-filter=.*实验性.*
🇺🇸 美国高级 = select,url=http://www.gstatic.com/generate_204,interval=600,tolerance=50,timeout=5,policy-regex-filter=.*美国高级.*
🇭🇰 香港高级 = select,url=http://www.gstatic.com/generate_204,interval=600,tolerance=50,timeout=5,policy-regex-filter=.*香港高级.*
🇯🇵 日本高级 = select,url=http://www.gstatic.com/generate_204,interval=600,tolerance=50,timeout=5,policy-regex-filter=.*日本高级.*
🇸🇬 新加坡高级 = select,url=http://www.gstatic.com/generate_204,interval=600,tolerance=50,timeout=5,policy-regex-filter=.*新加坡高级.*
🌐 全球直连 = select, DIRECT

# 🇰🇷 韩国节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=100,timeout=5,policy-regex-filter=(?=.*(KR|Korea|KOR|首尔|韩|韓|(?i)Korea))^((?!(香港|台湾|新加坡|美国|狮城|南朝鲜|US|SG|HK|TW|台灣|美國|獅城)).)*$
# 🇷🇺 俄罗斯节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=100,timeout=5,policy-regex-filter=🇷🇺|俄罗斯|RU|莫斯科|圣彼得堡|喀山|哈尔科夫|乌法|新西伯利亚|下诺夫哥罗德|沃罗涅什
# 🇬🇧 英国节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=100,timeout=5,policy-regex-filter=🇬🇧|英国|UK|伦敦|英格兰|伯明翰|泰恩河畔纽卡斯尔|利兹|爱丁堡|格拉斯哥|苏格兰
# 🇨🇦 加拿大 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=100,timeout=5,policy-regex-filter=🇨🇦|加拿大|CA|渥太华
# 🇮🇳 印度 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=100,timeout=5,policy-regex-filter=🇮🇳|印度|IN|IND|孟买|新德里|高知|Republic of India|India


[Rule]

#RULE-SET,https://whatshub.top/rule/AntiAD.list,REJECT
RULE-SET,https://raw.githubusercontent.com/dakaishizhong/Shadowrocket/refs/heads/main/list/ai.list,🤖️ 人工智能
RULE-SET,https://raw.githubusercontent.com/dakaishizhong/Shadowrocket/refs/heads/main/list/TikTok.list,🍿 TikTok
RULE-SET,https://raw.githubusercontent.com/dakaishizhong/Shadowrocket/refs/heads/main/list/Microsoft.list,Ⓜ️ 微软服务
RULE-SET,https://raw.githubusercontent.com/dakaishizhong/Shadowrocket/refs/heads/main/list/Apple.list,🍎 苹果服务
RULE-SET,https://raw.githubusercontent.com/dakaishizhong/Shadowrocket/refs/heads/main/list/AppStore.list,🍎 苹果服务
RULE-SET,https://raw.githubusercontent.com/dakaishizhong/Shadowrocket/refs/heads/main/list/AppleProxy.list,🍎 苹果服务
RULE-SET,https://raw.githubusercontent.com/dakaishizhong/Shadowrocket/refs/heads/main/list/Telegram.list,📲 TELEGRAM
RULE-SET,https://raw.githubusercontent.com/dakaishizhong/Shadowrocket/refs/heads/main/list/Twitter.list,📄 TWITTER
RULE-SET,https://raw.githubusercontent.com/dakaishizhong/Shadowrocket/refs/heads/main/list/Spotify.list,🎻 SPOTIFY
RULE-SET,https://raw.githubusercontent.com/dakaishizhong/Shadowrocket/refs/heads/main/list/Reddit.list,📖 REDDIT
RULE-SET,https://raw.githubusercontent.com/dakaishizhong/Shadowrocket/refs/heads/main/list/YouTube.list,📹 YOUTUBE
DOMAIN-SUFFIX,api.bilibili.com,📽 哔哩哔哩
RULE-SET,https://raw.githubusercontent.com/dakaishizhong/Shadowrocket/refs/heads/main/list/BiliBili.list,📽 哔哩哔哩
RULE-SET,https://raw.githubusercontent.com/dakaishizhong/Shadowrocket/refs/heads/main/list/Google.list,📲 Google
RULE-SET,https://raw.githubusercontent.com/dakaishizhong/Shadowrocket/refs/heads/main/list/ASN-CN.list,🌐 全球直连
FINAL,🚀 ALL

[URL Rewrite]
^https?://(www.)?g.cn https://www.google.com 302
^https?://(www.)?google.cn https://www.google.com 302
